{"ast":null,"code":"import data from '../data.json';\nimport axios from 'axios';\nexport const fetchData = () => {\n  return dispatch => {\n    dispatch({\n      type: 'FETCH_DATA_SUCCESS',\n      payload: data\n    });\n  };\n};\nconst clearAlert = () => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch({\n        type: 'CLEAR_ALERT'\n      });\n    }, 3000);\n  };\n};\nexport const setupUser = _ref => {\n  let {\n    email,\n    password,\n    isMember\n  } = _ref;\n  return async dispatch => {\n    console.log(isMember);\n    if (!isMember) {\n      try {\n        const {\n          data\n        } = await axios.post('https://reqres.in/api/register', {\n          email: email,\n          password: password\n        });\n        console.log(data);\n        const {\n          id,\n          token\n        } = data;\n        let user = {\n          email,\n          password\n        };\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        localStorage.setItem(\"token\", token);\n        let msg = \"Regisration Sucessful\";\n        dispatch({\n          type: 'SETUP_SUCCESS',\n          payload: {\n            msg,\n            user,\n            token\n          }\n        });\n      } catch (error) {\n        let msg = \"Registration Failed\";\n        dispatch({\n          type: 'SETUP_USER_ERROR',\n          payload: {\n            msg\n          }\n        });\n      }\n    }\n    if (isMember) {\n      try {\n        const {\n          data\n        } = await axios.post('https://reqres.in/api/login', {\n          email: email,\n          password: password\n        });\n        console.log(data);\n        const {\n          id,\n          token\n        } = data;\n        let user = {\n          email,\n          password,\n          token\n        };\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        localStorage.setItem(\"token\", token);\n        let msg = \"Login Sucessful\";\n        dispatch({\n          type: 'SETUP_SUCCESS',\n          payload: {\n            msg,\n            user,\n            token\n          }\n        });\n      } catch (error) {\n        let msg = \"Login Failed\";\n        dispatch({\n          type: 'SETUP_USER_ERROR',\n          payload: {\n            msg\n          }\n        });\n      }\n    }\n    dispatch(clearAlert());\n  };\n};\nexport const logout = () => {\n  console.log('hi');\n  return dispatch => {\n    console.log('hi');\n    localStorage.clear();\n    dispatch({\n      type: 'LOGOUT_USER'\n    });\n  };\n};\nexport const fetchEmployees = () => {\n  return async dispatch => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        // If token is not found, handle the error or redirect to login\n        dispatch({\n          type: 'TOKEN_ERROR'\n        });\n        return;\n      }\n\n      // Set the Authorization header with the token\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const response = await axios.get('https://reqres.in/api/users', config);\n      const employees = response.data.data;\n      dispatch({\n        type: 'FETCH_EMPLOYEES_SUCCESS',\n        payload: {\n          employees\n        }\n      });\n    } catch (error) {\n      // Handle the error if the API request fails\n      dispatch({\n        type: 'FETCH_EMPLOYEES_ERROR',\n        payload: {\n          error\n        }\n      });\n    }\n  };\n};","map":{"version":3,"names":["data","axios","fetchData","dispatch","type","payload","clearAlert","setTimeout","setupUser","_ref","email","password","isMember","console","log","post","id","token","user","localStorage","setItem","JSON","stringify","msg","error","logout","clear","fetchEmployees","getItem","config","headers","Authorization","response","get","employees"],"sources":["/Users/cyriljoby/ReactHandsOn/src/redux/actions.js"],"sourcesContent":["import data from '../data.json';\nimport axios from 'axios';\n\n\n\n\nexport const fetchData = () => {\n  return (dispatch) => {\n    dispatch({ type: 'FETCH_DATA_SUCCESS', payload: data });\n  };\n};\n\nconst clearAlert = () => {\n  return (dispatch) => {\n    setTimeout(() => {\n      dispatch({ type: 'CLEAR_ALERT' });\n    }, 3000);  };\n  \n};\n\nexport const setupUser = ({email,password, isMember}) => {\n  return async (dispatch) => {\n    console.log(isMember)\n    if (!isMember){\n      try{\n        const {data}  = await axios.post('https://reqres.in/api/register', { email: email, password: password})\n        console.log(data);\n        const {id,token} = data\n        let user={email,password}\n        localStorage.setItem(\"user\",JSON.stringify(user))\n        localStorage.setItem(\"token\",(token))\n        let msg = \"Regisration Sucessful\"\n        dispatch({type: 'SETUP_SUCCESS', payload: {msg,user,token} })\n      }\n      catch(error){\n        let msg = \"Registration Failed\"\n        dispatch({type: 'SETUP_USER_ERROR', payload: {msg} })\n      }\n      \n  \n  }\n\n    if (isMember){\n      try{\n        const {data}  = await axios.post('https://reqres.in/api/login', { email: email, password: password})\n        console.log(data);\n        const {id,token} = data\n        let user={email,password,token}\n        localStorage.setItem(\"user\",JSON.stringify(user))\n        localStorage.setItem(\"token\",(token))\n        let msg = \"Login Sucessful\"\n        dispatch({type: 'SETUP_SUCCESS', payload: {msg,user,token} })\n      }\n      catch(error){\n        let msg = \"Login Failed\"\n        dispatch({type: 'SETUP_USER_ERROR', payload: {msg} })\n      }\n      \n\n    }\n    dispatch(clearAlert());\n  }\n};\n\nexport const logout = ()=>{\n  console.log('hi')\n  return  (dispatch) => {\n    console.log('hi')\n    localStorage.clear();\n    dispatch({type:'LOGOUT_USER'})\n  }\n}\n\nexport const fetchEmployees = () => {\n  return async (dispatch) => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        // If token is not found, handle the error or redirect to login\n        dispatch({ type: 'TOKEN_ERROR' });\n        return;\n      }\n\n      // Set the Authorization header with the token\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      };\n\n      const response = await axios.get('https://reqres.in/api/users', config);\n      const employees = response.data.data;\n\n      dispatch({ type: 'FETCH_EMPLOYEES_SUCCESS', payload: { employees } });\n    } catch (error) {\n      // Handle the error if the API request fails\n      dispatch({ type: 'FETCH_EMPLOYEES_ERROR', payload: { error } });\n    }\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}