{"ast":null,"code":"var _jsxFileName = \"/Users/cyriljoby/ReactHandsOn/src/pages/EmployeeDetails.js\",\n  _s = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport Wrapper from '../assets/Wrappers/EmployeeDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const employees = useSelector(state => state.employees);\n\n  // Find the employee with the matching ID\n  const employee = employees.find(employee => employee.id === parseInt(id));\n  if (!employee) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No employee found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employee-details\",\n      children: employee ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"employee-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"employee-name\",\n          children: [employee.first_name, \" \", employee.last_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"employee-avatar\",\n          src: employee.avatar,\n          alt: \"Employee Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"employee-id\",\n          children: [\"ID: \", employee.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"employee-email\",\n          children: [\"Email: \", employee.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: \"Employee not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeDetails, \"7jao8Klz28ThVwkeXt/SooYWXtg=\", false, function () {\n  return [useParams, useSelector];\n});\n_c = EmployeeDetails;\nexport default EmployeeDetails;\nvar _c;\n$RefreshReg$(_c, \"EmployeeDetails\");","map":{"version":3,"names":["useParams","useSelector","Wrapper","jsxDEV","_jsxDEV","EmployeeDetails","_s","id","employees","state","employee","find","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","className","first_name","last_name","src","avatar","alt","email","_c","$RefreshReg$"],"sources":["/Users/cyriljoby/ReactHandsOn/src/pages/EmployeeDetails.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport Wrapper from '../assets/Wrappers/EmployeeDetails';\n\nconst EmployeeDetails = () => {\n  const { id } = useParams();\n  const employees = useSelector((state) => state.employees);\n\n  // Find the employee with the matching ID\n  const employee = employees.find((employee) => employee.id === parseInt(id));\n\n  if (!employee) {\n    return <p>No employee found.</p>;\n  }\n\n  return (\n    <Wrapper>\n    <div className=\"employee-details\">\n      {employee ? (\n        <div className=\"employee-card\">\n          <h1 className=\"employee-name\">{employee.first_name} {employee.last_name}</h1>\n          <img className=\"employee-avatar\" src={employee.avatar} alt=\"Employee Avatar\" />\n          <p className=\"employee-id\">ID: {employee.id}</p>\n          <p className=\"employee-email\">Email: {employee.email}</p>\n        </div>\n      ) : (\n        <p className=\"error-message\">Employee not found</p>\n      )}\n    </div>\n    </Wrapper>\n  );\n};\n\nexport default EmployeeDetails;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,OAAO,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC1B,MAAMQ,SAAS,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACD,SAAS,CAAC;;EAEzD;EACA,MAAME,QAAQ,GAAGF,SAAS,CAACG,IAAI,CAAED,QAAQ,IAAKA,QAAQ,CAACH,EAAE,KAAKK,QAAQ,CAACL,EAAE,CAAC,CAAC;EAE3E,IAAI,CAACG,QAAQ,EAAE;IACb,oBAAON,OAAA;MAAAS,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAClC;EAEA,oBACEb,OAAA,CAACF,OAAO;IAAAW,QAAA,eACRT,OAAA;MAAKc,SAAS,EAAC,kBAAkB;MAAAL,QAAA,EAC9BH,QAAQ,gBACPN,OAAA;QAAKc,SAAS,EAAC,eAAe;QAAAL,QAAA,gBAC5BT,OAAA;UAAIc,SAAS,EAAC,eAAe;UAAAL,QAAA,GAAEH,QAAQ,CAACS,UAAU,EAAC,GAAC,EAACT,QAAQ,CAACU,SAAS;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC7Eb,OAAA;UAAKc,SAAS,EAAC,iBAAiB;UAACG,GAAG,EAAEX,QAAQ,CAACY,MAAO;UAACC,GAAG,EAAC;QAAiB;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/Eb,OAAA;UAAGc,SAAS,EAAC,aAAa;UAAAL,QAAA,GAAC,MAAI,EAACH,QAAQ,CAACH,EAAE;QAAA;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChDb,OAAA;UAAGc,SAAS,EAAC,gBAAgB;UAAAL,QAAA,GAAC,SAAO,EAACH,QAAQ,CAACc,KAAK;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC,gBAENb,OAAA;QAAGc,SAAS,EAAC,eAAe;QAAAL,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACnD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEd,CAAC;AAACX,EAAA,CA3BID,eAAe;EAAA,QACJL,SAAS,EACNC,WAAW;AAAA;AAAAwB,EAAA,GAFzBpB,eAAe;AA6BrB,eAAeA,eAAe;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}